pipeline {
  agent {
    kubernetes {
      defaultContainer 'git'
      yaml """
apiVersion: v1
kind: Pod
spec:
  nodeSelector:
    doks.digitalocean.com/node-pool: pool-9x07hzzwz
  containers:
    - name: kaniko
      image: gcr.io/kaniko-project/executor:v1.23.2-debug
      command:
        - cat
      tty: true
      volumeMounts:
        - name: kaniko-secret
          mountPath: /kaniko/.docker
      resources:
        requests:
          cpu: "800m"
          memory: "1Gi"
        limits:
          cpu: "2"
          memory: "2Gi"
    - name: git
      image: alpine/git:2.45.2
      command:
        - cat
      tty: true
      resources:
        requests:
          cpu: "100m"
          memory: "128Mi"
        limits:
          cpu: "300m"
          memory: "256Mi"
  volumes:
    - name: kaniko-secret
      emptyDir: {}
"""
    }
  }

  parameters {
    string(name: 'APP_VERSION', defaultValue: '0.1.4', description: 'Nueva versión SemVer (x.y.z), NO usar latest')
  }

  environment {
    IMAGE_REPO = 'ivan150/pedidos-api'
    CHART_VALUES = 'charts/pedido-app/values.yaml'
  }

  stages {
    stage('Validar versión') {
      steps {
        script {
          // Normaliza posibles espacios/CRLF y caracteres invisibles
          def vRaw = (params.APP_VERSION ?: '')
          def v = vRaw.trim()
          // Elimina cualquier caracter que no sea dígito o punto (p. ej. zero-width, NBSP, etc.)
          v = v.replaceAll('[^0-9\\.]', '')
          if (v == 'latest') {
            error 'No se permite usar la etiqueta mutable latest'
          }
          // Nota: en regex "slashy" de Groovy no se deben duplicar las barras: 
          // usar ^\d+\.\d+\.\d+$ como /^\d+\.\d+\.\d+$/ provocaría fallo al buscar una barra invertida literal.
          if (!(v ==~ /^\d+\.\d+\.\d+$/)) {
            error "APP_VERSION debe ser SemVer x.y.z (ej. 0.1.4). Valor recibido: ${params.APP_VERSION}"
          }
          echo "Usando APP_VERSION normalizado: ${v}"
          // Propaga la versión normalizada al entorno para el resto de stages
          env.APP_VERSION = v
        }
      }
    }

    stage('Configurar credenciales Docker para Kaniko') {
      steps {
        container('kaniko') {
          withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
            sh '''
              AUTH=$(printf '%s' "$DOCKER_USER:$DOCKER_PASS" | base64 | tr -d '\n')
              mkdir -p /kaniko/.docker
              cat > /kaniko/.docker/config.json <<EOF
              {"auths":{"https://index.docker.io/v1/":{"auth":"${AUTH}"}}}
EOF
              chmod 600 /kaniko/.docker/config.json
            '''
          }
        }
      }
    }

    stage('Build & Push (Kaniko)') {
      steps {
        container('kaniko') {
          sh '''
            /kaniko/executor \
              --context $WORKSPACE \
              --dockerfile backend/Dockerfile \
              --destination ${IMAGE_REPO}:${APP_VERSION} \
              --cleanup
          '''
        }
      }
    }

    stage('Bump image.tag en Helm values') {
      steps {
        container('git') {
          sh '''
            echo "Actualizando ${CHART_VALUES} a tag ${APP_VERSION}"
            # Actualiza la línea con tag: "<valor>" en values.yaml
            sed -E -i "s|(tag:[[:space:]]*\")[^"]+(\")[[:space:]]*$|\\1${APP_VERSION}\\2|" ${CHART_VALUES}
            echo 'Preview del cambio:'
            grep -n -E 'repository:|tag:' ${CHART_VALUES} | sed -n '1,10p'
          '''
        }
      }
    }

    stage('Commit & Push') {
      steps {
        container('git') {
          withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
            sh '''
              git config user.name "jenkins-bot"
              git config user.email "jenkins-bot@local"
              git add ${CHART_VALUES}
              git commit -m "ci: bump image.tag to ${APP_VERSION}" || true
              git remote set-url origin https://${GIT_USER}:${GIT_PASS}@github.com/ivanlozanoq/proyecto-mobiapp.git
              git push origin HEAD:main
            '''
          }
        }
      }
    }
  }
}

